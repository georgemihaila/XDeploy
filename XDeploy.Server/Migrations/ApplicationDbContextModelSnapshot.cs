// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XDeploy.Server.Infrastructure.Data;

namespace XDeploy.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("XDeploy.Server.Infrastructure.Data.APIKey", b =>
                {
                    b.Property<string>("KeyHash")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstChars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KeyHash");

                    b.ToTable("APIKeys");
                });

            modelBuilder.Entity("XDeploy.Server.Infrastructure.Data.Application", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeployerIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Encrypted")
                        .HasColumnType("bit");

                    b.Property<int>("EncryptionAlgorithm")
                        .HasColumnType("int");

                    b.Property<bool>("IPRestrictedDeployer")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostdeployActions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PredeployActions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size_Bytes")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("XDeploy.Server.Infrastructure.Data.DeploymentJob", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DeploymentJob");
                });

            modelBuilder.Entity("XDeploy.Server.Infrastructure.Data.ExpectedFile", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Checksum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentJobID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ParentJobID");

                    b.ToTable("ExpectedFile");
                });

            modelBuilder.Entity("XDeploy.Server.Infrastructure.Data.ExpectedFile", b =>
                {
                    b.HasOne("XDeploy.Server.Infrastructure.Data.DeploymentJob", "ParentJob")
                        .WithMany("ExpectedFiles")
                        .HasForeignKey("ParentJobID");
                });
#pragma warning restore 612, 618
        }
    }
}
